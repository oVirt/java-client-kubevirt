name: build
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: centos-stream-8
            shortcut: cs8
            container-name: stream8
          - name: centos-stream-9
            shortcut: cs9
            container-name: stream9

    name: ${{ matrix.name }}

    container:
      image: quay.io/centos/centos:${{ matrix.container-name }}

    steps:
    - name: Prepare CentOS Stream 8 environment
      if: ${{ matrix.shortcut == 'cs8' }}
      run: |
        # Install oVirt repositories
        dnf copr enable -y ovirt/ovirt-master-snapshot centos-stream-8
        dnf install -y ovirt-release-master

        # Configure CS8 repositories
        dnf config-manager --enable powertools -y
        dnf module enable -y javapackages-tools

    - name: Prepare CentOS Stream 9 environment
      if: ${{ matrix.shortcut == 'cs9' }}
      run: |
        # DNF core plugins are installed in the official CS9 container image
        dnf install -y dnf-plugins-core

        # Install oVirt repositories
        dnf copr enable -y ovirt/ovirt-master-snapshot
        dnf install -y ovirt-release-master

    - name: Install required packages
      run: |
        dnf install -y \
          gcc \
          autoconf \
          automake \
          createrepo_c \
          dnf-utils \
          findutils \
          git \
          java-11-openjdk-devel \
          make \
          maven-source-plugin \
          maven-shade-plugin \
          maven \
          rpm-build \
          sed

    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Set up artifacts directory
      run: echo "ARTIFACTS_DIR=exported-artifacts/build$(rpm -E '%{?dist}')" >> $GITHUB_ENV

    - name: Perform build
      run: |
        .automation/build-rpm.sh $ARTIFACTS_DIR

    - name: Upload artifacts
      uses: ovirt/upload-rpms-action@v2
      with:
        directory: exported-artifacts/
